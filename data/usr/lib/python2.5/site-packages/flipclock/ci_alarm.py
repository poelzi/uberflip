import time
import pygame
from pygame.locals import *
import ci_clock
import ci_init as ci
import ci_gfx
import os, sys
######################################################################
# Modulo ci_alarm.py 0.1.2 Plankton    Play Alarm 
# Ciro Ippolito
# 20:44 PM 02/21/2009
######################################################################
pygame.init
ALARM_CLOCK_EVENT = pygame.USEREVENT + 2
pygame.time.set_timer(ALARM_CLOCK_EVENT,1000)

if ci.tablet==1:  import hildon
def checkalarm():
  if ci.sw_config[0]==1:
    time_min = int(ci.orario[11:13])*60+int(ci.orario[14:16])
    if ci.all_min == time_min: 
      ci.sw_config[0]=2              #Alarm playing !!!!!!NUOVO ALLARME STATUS
      ci.fcmode=5
      ci_clock.clock()
      Wakeupitsabeautifulmorning()

def Wakeupitsabeautifulmorning():   #thanks to Boo Radleys
  global ALARM_CLOCK_EVENT
  while True:
    event = ci.pygame.event.wait()
    if event.type == QUIT:
       print "ciAlarm exit!"
       #sys.exit(0)
    if event.type == ci.CLOCK_EVENT:
      ci_clock.clock()
    if event.type == ALARM_CLOCK_EVENT:
      if ci.tablet==1:
        carnevale()
        hildon.hildon_play_system_sound(ci.path+ci.alarmsound)
    elif event.type == MOUSEBUTTONDOWN:   
      pass
    elif event.type == MOUSEBUTTONUP:
      ci.all_min = ci.hou_min + 5   #Please mum, another 5 minutes
      ci.sveglia[0] = ci.all_min/600                            #conv min => 12:12
      ci.sveglia[1] = (ci.all_min/60)%10
      ci.sveglia[2] = (ci.all_min-ci.all_min/60*60)/10
      ci.sveglia[3] = (ci.all_min-ci.all_min/60*60)%10
      ci.fcmode=0
      ci.sw_config[0]=1
      msg=ci.font1.render("ok, 5 more min",True,(ci.r,ci.g,ci.b))
      ci.cl_screen.blit(msg,(350,440))
      pygame.event.clear()
      break
  ci_clock.clock()

def countdown():
  x0,y0,x1,y1 = ci.sv_coords

  if ci.fcmode==0:
    pass
  elif  ci.fcmode==1:
    ci.all_min = ci.al_edi[0]*600+ci.al_edi[1]*60+ci.al_edi[2]*10+ci.al_edi[3]
  if ci.fcmode==3:          y1=y1-60     
  if ci.hou_min>ci.all_min:                     #[DEBUG]print "la sveglia e' per domani"
    remh=(1440-ci.hou_min+ci.all_min)/60
    remm=(1440-ci.hou_min+ci.all_min)-remh*60
  else:                                         #[DEBUG]print "la sveglia e' per oggi"
    remh=(ci.all_min-ci.hou_min)/60
    remm=(ci.all_min-ci.hou_min)-remh*60
  if remh<10:
    ci.remaing[0]=0
    ci.remaing[1]=remh
  else:
    ci.remaing[0]=remh/10
    ci.remaing[1]=remh%10
  if remm<10:
    ci.remaing[2]=0
    ci.remaing[3]=remm
  else:
    ci.remaing[2]=remm/10
    ci.remaing[3]=remm%10

def led():
  if ci.sw_led==1:  
    set_mode("direct")
    value = "%X:%X:%X" % (ci.r,ci.g,ci.b)
    FILE = open("/sys/devices/platform/i2c_omap.2/i2c-0/0-0032/color","w")
    FILE.write(value)
    FILE.close()

def set_mode(mode):
  if ci.sw_led==1:
    FILE = open("/sys/devices/platform/i2c_omap.2/i2c-0/0-0032/mode","w")
    FILE.write(mode)
    FILE.close()

def carnevale():
  ci.r=250
  ci.g=0
  ci.b=0
  for i in range(1, 50):
    ci.pygame.time.delay(5)
    ci.r=ci.r+0
    ci.g=ci.g+0
    ci.b=ci.b+5
    led ()
  for i in range(1, 50):
    ci.pygame.time.delay(5)
    ci.r=ci.r-5
    ci.g=ci.g+2
    ci.b=ci.b-5
    led ()
  for i in range(1, 50):
    ci.pygame.time.delay(5)
    ci.r=ci.r+5
    ci.g=ci.g-2
    ci.b=ci.b-0
    led ()
  for i in range(1, 50):
    ci.pygame.time.delay(5)
    ci.r=ci.r-5
    ci.g=ci.g-0
    ci.b=ci.b-0
    led ()
  led ()

def light_sensor():
  lux = file("/sys/devices/platform/i2c_omap.2/i2c-0/0-0029/lux","r")
  ci.luxlevel=int(lux.read())
#[DEBUG]light_sensor()
#[DEBUG]Wakeupitsabeautifulmorning()
  
